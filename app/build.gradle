apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion COMPLILE_SDK_VERSION
    defaultConfig {
        applicationId "com.karthik.splash"
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion COMPLILE_SDK_VERSION
        versionCode 1
        versionName "0.4"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    //TODO: fix lint issues.
    lintOptions {
        abortOnError false
    }
    buildTypes {
        debug {
            buildConfigField "String", "SPLASH_BASE_URL", '"https://api.unsplash.com/"'
            buildConfigField "String", "SPLASH_KEY", '""'
            buildConfigField "String", "SPLASH_KEY_SECRET", '""'
            buildConfigField "String", "SPLASH_LOGIN_URL", '"https://unsplash.com/oauth/authorize"'
            buildConfigField "String", "SPLASH_LOGIN_CALLBACK", '"splash://splash-auth-callback"'
            buildConfigField "String", "SPLASH_CALLBACK", '"splash-auth-callback"'
            buildConfigField "String", "SPLASH_TOKEN_URL", '"https://unsplash.com/oauth/token"'
            resValue "string", "version","version "+defaultConfig.versionName
        }

        release {
            buildConfigField "String", "SPLASH_BASE_URL", '"https://api.unsplash.com/"'
            buildConfigField "String", "SPLASH_KEY", '""'
            buildConfigField "String", "SPLASH_KEY_SECRET", '""'
            buildConfigField "String", "SPLASH_LOGIN_URL", '"https://unsplash.com/oauth/authorize"'
            buildConfigField "String", "SPLASH_LOGIN_CALLBACK", '"splash://splash-auth-callback"'
            buildConfigField "String", "SPLASH_CALLBACK", '"splash-auth-callback"'
            buildConfigField "String", "SPLASH_TOKEN_URL", '"https://unsplash.com/oauth/token"'
            resValue "string", "version","version "+defaultConfig.versionName
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "version"
    productFlavors {
        demo{
            dimension "version"
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
        appstore{
            dimension "version"
            applicationIdSuffix ".appstore"
            versionNameSuffix "-appstore"
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:${ANDROID_X_VERSION}"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation "androidx.browser:browser:${ANDROID_X_BROWSER_VERSION}"
    implementation "androidx.recyclerview:recyclerview:${ANDROID_X_VERSION}"
    implementation "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    implementation "com.squareup.retrofit2:converter-gson:${RETROFIT_CONV_VERSION}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${RETROFIT_VERSION}"
    implementation "com.squareup.okhttp3:logging-interceptor:${RETROFIT_LOGGER_VERSION}"
    implementation "com.google.dagger:dagger:${DAGGER_VERSION}"
    kapt "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
    implementation "io.reactivex.rxjava2:rxjava:${RX_JAVA_VERSION}"
    implementation "io.reactivex.rxjava2:rxandroid:${RX_ANDROID_VERSION}"
    implementation "com.squareup.picasso:picasso:${PICASSO_VERSION}"
    implementation "com.github.florent37:materialimageloading:${PICASSO_MATERIAL_VERSION}"
    implementation "com.github.esafirm:RxDownloader:${RX_DOWNLOADER_VERSION}"

    /**
     * Architecture components
     */
    //Lifecycle comp:(ViewModel + LiveData)
    implementation "androidx.lifecycle:lifecycle-extensions:${ARCH_LIFECYCLE_COMPONENT_VERSION}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${ARCH_LIFECYCLE_COMPONENT_VERSION}"
    //room + rxjava
    implementation "androidx.room:room-runtime:${ARCH_COMPONENT_ROOM_VERSION}"
    kapt "androidx.room:room-compiler:${ARCH_COMPONENT_ROOM_VERSION}"
    implementation "androidx.room:room-rxjava2:${ARCH_COMPONENT_ROOM_VERSION}"
    //paging
    implementation "androidx.paging:paging-runtime:${ARCH_COMPONENT_PAGING_VERSION}"





    debugImplementation "com.github.ChuckerTeam.Chucker:library:${CHUCKER_VERSION}"
    releaseImplementation "com.github.ChuckerTeam.Chucker:library-no-op:${CHUCKER_VERSION}"

    //testing
    testImplementation "junit:junit:${JUNIT_VERSION}"
    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:${ANDROID_X_CORE_TEST_VERSION}"
    testImplementation "androidx.room:room-testing:${ARCH_COMPONENT_ROOM_VERSION}"
    testImplementation "androidx.paging:paging-common:${ARCH_COMPONENT_PAGING_VERSION}"
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
}
